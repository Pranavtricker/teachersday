// ===== Scratch Card =====
const canvas = document.getElementById('scratchCanvas');
const ctx = canvas.getContext('2d');
const poemContent = document.querySelector('.poem-content');

// Make canvas size dynamic
function resizeCanvas() {
  canvas.width = canvas.offsetWidth;
  canvas.height = canvas.offsetHeight;
  // Cover color
  ctx.fillStyle = '#b65a18';
  ctx.fillRect(0, 0, canvas.width, canvas.height);
}
window.addEventListener('resize', resizeCanvas);
resizeCanvas();

// For touch support
let isDrawing = false;

function startDraw(e) { isDrawing = true; }
function endDraw(e) { isDrawing = false; checkReveal(); }
function draw(e) {
  if (!isDrawing) return;
  e.preventDefault();
  let rect = canvas.getBoundingClientRect();
  let x, y;
  if(e.touches){
    x = e.touches[0].clientX - rect.left;
    y = e.touches[0].clientY - rect.top;
  } else {
    x = e.clientX - rect.left;
    y = e.clientY - rect.top;
  }
  ctx.globalCompositeOperation = 'destination-out';
  ctx.beginPath();
  ctx.arc(x, y, 25, 0, Math.PI * 2);
  ctx.fill();
}

// Event listeners
canvas.addEventListener('mousedown', startDraw);
canvas.addEventListener('mouseup', endDraw);
canvas.addEventListener('mousemove', draw);
canvas.addEventListener('touchstart', startDraw);
canvas.addEventListener('touchend', endDraw);
canvas.addEventListener('touchmove', draw);

// Reveal poem when enough scratched
function checkReveal(){
  const pixels = ctx.getImageData(0, 0, canvas.width, canvas.height).data;
  let transparent = 0;
  for(let i=3; i<pixels.length; i+=4){
    if(pixels[i] < 128) transparent++;
  }
  const percent = transparent / (canvas.width*canvas.height) * 100;
  if(percent > 10){
    poemContent.style.transition = 'opacity 1s ease';
    poemContent.style.opacity = 1;
    canvas.style.transition = 'opacity 1s ease';
    canvas.style.opacity = 0;
    setTimeout(()=>{ canvas.style.display = 'none'; }, 1000);
  }
}

// ===== Memory Lane =====
const memoryBtn = document.getElementById('memoryBtn');
const memoryLane = document.getElementById('memoryLane');
const closeBtn = memoryLane.querySelector('.close-btn');

memoryBtn.addEventListener('click', () => {
  memoryLane.classList.add('show');
});

closeBtn.addEventListener('click', () => {
  memoryLane.classList.remove('show');
});

memoryLane.addEventListener('click', e => {
  if(e.target === memoryLane){
    memoryLane.classList.remove('show');
  }
});

